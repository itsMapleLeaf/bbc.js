{"version":3,"sources":["test.js"],"names":["test","require","bbc","t","deepEqual","tokenize","type","text","tag","param","parseText","pass"],"mappings":";;AAAA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,MAAMD,QAAQ,SAAR,CAAZ;;AAEAD,KAAK,YAAL,EAAmBG,KAAK;AACtBA,IAAEC,SAAF,CAAYF,IAAIG,QAAJ,CAAc,kCAAd,CAAZ,EAA8D,CAC5D,EAACC,MAAM,WAAP,EAAoBC,MAAM,KAA1B,EAAiCC,KAAK,GAAtC,EAA2CC,OAAO,IAAlD,EAD4D,EAE5D,EAACH,MAAM,MAAP,EAAeC,MAAM,OAArB,EAF4D,EAG5D,EAACD,MAAM,SAAP,EAAkBC,MAAM,MAAxB,EAAgCC,KAAK,GAArC,EAH4D,EAI5D,EAACF,MAAM,MAAP,EAAeC,MAAM,GAArB,EAJ4D,EAK5D,EAACD,MAAM,WAAP,EAAoBC,MAAM,KAA1B,EAAiCC,KAAK,GAAtC,EAA2CC,OAAO,IAAlD,EAL4D,EAM5D,EAACH,MAAM,MAAP,EAAeC,MAAM,OAArB,EAN4D,EAO5D,EAACD,MAAM,SAAP,EAAkBC,MAAM,MAAxB,EAAgCC,KAAK,GAArC,EAP4D,EAQ5D,EAACF,MAAM,MAAP,EAAeC,MAAM,SAArB,EAR4D,CAA9D;AAUD,CAXD;;AAaAP,KAAK,4BAAL,EAAmCG,KAAK;AACtCA,IAAEC,SAAF,CAAYF,IAAIQ,SAAJ,CAAc,SAAd,CAAZ,EAAsC,CAAC,EAACJ,MAAM,MAAP,EAAeC,MAAM,SAArB,EAAD,CAAtC;AACD,CAFD;;AAIAP,KAAK,oBAAL,EAA2BG,KAAK;AAC9BA,IAAEQ,IAAF,CAAO,MAAP;AACD,CAFD;;AAIAX,KAAK,SAAL,EAAgBG,KAAK;AACnBA,IAAEQ,IAAF,CAAO,MAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAVD","file":"test.js","sourcesContent":["const test = require('ava')\nconst bbc = require('./index')\n\ntest('tokenizing', t => {\n  t.deepEqual(bbc.tokenize(`[b]hello[/b] [i]world[/i] foobar`), [\n    {type: 'start-tag', text: '[b]', tag: 'b', param: null},\n    {type: 'text', text: 'hello'},\n    {type: 'end-tag', text: '[/b]', tag: 'b'},\n    {type: 'text', text: ' '},\n    {type: 'start-tag', text: '[i]', tag: 'i', param: null},\n    {type: 'text', text: 'world'},\n    {type: 'end-tag', text: '[/i]', tag: 'i'},\n    {type: 'text', text: ' foobar'},\n  ])\n})\n\ntest('parsing a single text node', t => {\n  t.deepEqual(bbc.parseText('foo bar'), [{type: 'text', text: 'foo bar'}])\n})\n\ntest('parsing a tag pair', t => {\n  t.pass('todo')\n})\n\ntest('parsing', t => {\n  t.pass('todo')\n  // t.deepEqual(bbc.parse(bbc.tokenize('foo bar')), [\n  //   {\n  //     type: 'tag-pair',\n  //     tag: 'b',\n  //     param: null,\n  //     children: [{type: 'text', text: 'test'}],\n  //   },\n  // ])\n})\n"]}